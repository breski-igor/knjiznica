@model IEnumerable<WebApplication1.Models.Book>
@using Microsoft.AspNetCore.Identity

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<div class="row">
    <div class="col-md-6">
        <form class="d-flex" asp-action="Index" asp-controller="Books">
            <input name="searchString" class="form-control me-1" type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-dark" type="submit">Search</button>
        </form>
    </div>

    <div class="col-md-6">
        <a asp-action="Index" class="text-dark">Back To Full List</a>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th scope="col">
                <a class="text-dark" asp-controller="Books" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">
        @Html.DisplayNameFor(model => model.Title)</a>
            </th>
            <th scope="col">
                <a class="text-dark" asp-controller="Books" asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]">
                    @Html.DisplayNameFor(model => model.Author)</a>
            </th>
            <th scope="col">
                <a class="text-dark" asp-controller="Books" asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParm"]">
                    @Html.DisplayNameFor(model => model.Genre)
                </a>
            </th>
            <th scope="col">
                <a class="text-dark" asp-controller="Books" asp-action="Index" asp-route-sortOrder="@ViewData["AvailabilitySortParm"]">
                    @Html.DisplayNameFor(model => model.Availability)
                </a>
            </th>
            @if (User.IsInRole("Admin"))
                {
                <th scope="col">
                    <a class="text-dark" asp-controller="Books" asp-action="Index" asp-route-sortOrder="@ViewData["QuantitySortParm"]">
                        @Html.DisplayNameFor(model => model.Quantity)
                    </a>
                </th>
                }
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" class="text-dark" asp-route-id="@item.Id">@item.Title</a>
            </td>
            <td>
                <a asp-action="Details" class="text-dark" asp-route-id="@item.Id">@item.Author</a>
            </td>
            <td>
                <a asp-action="Details" class="text-dark" asp-route-id="@item.Id">@item.Genre</a>
            </td>
            <td>
                <a asp-action="Details" class="text-dark" asp-route-id="@item.Id">@item.Availability</a>
            </td>
            @if (User.IsInRole("Admin"))
            {
                <td>
                    <a asp-action="Details" class="text-dark" asp-route-id="@item.Id">@item.Quantity</a>
                </td>
            }
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                }
        </tr>
}
    </tbody>
</table>
